##component=frontend
##source Common.sh
##
##Head "Installing Nginx"
##dnf install nginx -y &>>log_file
##Stat $?
##Head "Copy  the Expense.conf file"
##cp expense.conf  /etc/nginx/default.d/expense.conf &>>log_file
##Stat $?
#
#App_prereq "/usr/share/nginx/html"
#Head "start Nginx service"
#systemctl enable nginx &>>log_file
#systemctl restart nginx &>>log_file
#Stat $?
#  DIR=$1
#
#  Head "Remove existing App content"
#  rm -rf $1 &>>log_file
#  Stat $?
#  Head "Create Application Directory"
#  mkdir $1 &>>log_file
#  Stat $?
#  Head "download Application content"
#  curl -o /tmp/${component} https://expense-artifacts.s3.amazonaws.com/${component}.zip &>>log_file
#  cd $1 &>>log_file
#  Stat $?
#  Head "Extracting application content"
#
#  unzip /tmp/${component} &>>log_file
#  Stat $?
#}

- name: setup frontend
  hosts: all
  become: true
  tasks:
    - name: Nginx install
      ansible.builtin.dnf:
        name: nginx
        state: installed

    - name: Copy Expense configuration file
      ansible.builtin.copy:
        src: expense.conf
        dest: /etc/nginx/default.d/expense.conf

    - name: Remove existing content
      ansible.builtin.file:
        path: /usr/share/nginx/html
        state: absent

    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: /usr/share/nginx/html
        state: directory

    - name: Download and Extract app content
      ansible.builtin.unarchive:
        src: https://expense-artifacts.s3.amazonaws.com/frontend.zip
        dest: /usr/share/nginx/html
        remote_src: yes

    - name: Start Nginx
      ansible.builtin.systemd_service:
        name: Nginx
        enabled: true
        state : restarted
